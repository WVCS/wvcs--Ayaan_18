import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class Driver extends JPanel implements ActionListener, MouseListener, MouseMotionListener{
	
	
	//private Cell cells[] = new Cell[10]; 
	
	
	private ArrayList<Cell> cells2 = new ArrayList<Cell>(); 
	
	private Cell player = new Cell(); 
	
	
	
	

	public void paint(Graphics g) {
		g.setColor(Color.black);
		g.fillRect(0, 0, 1000, 1000);
		
		//System.out.println("paint");
	
		for(Cell thisCell : cells2) { //changed thiscell to temp
			thisCell.Paint(g);
		}
		
		
		
		//for(Cell thisCell : cells) {
			
		//	thisCell.Paint(g);
			
		//}
		
		for(int i = 0; i < cells2.size()-1; i++) {
			for(int j = i + 1; j < cells2.size(); j++) {
				
				//CHANGE Collide TO collide
				cells2.get(i).collide(cells2.get(j));
				
			}
		}
		
		player.Paint(g);
	}
	
	
	public void rings(int x, int y, int width, Graphics g) {
		
		
		
	}	
	
	public static void main(String[] arg) {
		
		//find a way to run the constructor of the Driver class
		Driver d  = new Driver(); //will this invoke a constructor?
		

	}	
	
	//1) add a Driver constructor
		public Driver() {
			JFrame frame = new JFrame("ArrayList stuff");
			frame.setSize(800,600);
			frame.add(this);
			
			//this part makes sure the x button closes the program
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			
			
			//connect mouseListener
			frame.addMouseListener(this);
			frame.addMouseMotionListener(this);
			
			for(int i = 0; i < 100; i++) {
				
			//int x = (int) Math.random()*760+35; //800
			//int y = (int) Math.random()*560+35; //600
			

				
				Cell temp = new Cell((int) Math.random()*760 + 35,(int) Math.random()*560 + 35); 
				
				cells2.add(temp); 
				
				//Cell temp = new Cell();
				
				//temp.setxPos((int) Math.random()*760+35);
				//temp.setyPos((int) Math.random()*560+35);
				
				 
				
				//cells2[i] = new Cell(((int) Math.random()*801), ((int) Math.random()*601)); 
				
			}
			
			//player.setvX(0);
			//player.setvY(0);
			
	
			
			
			t.start();
			//make the frame show up
			frame.setVisible(true);
					
		}
	Timer t = new Timer(16, this);
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		repaint();
	}


	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
		
	Cell temp = new Cell(arg0.getX()-30, arg0.getY()-30); 
	
		//add it to ArrayList
		cells2.add(temp); 
		
		
	}


	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
		
		
	
	}


	@Override
	public void mouseDragged(MouseEvent m) {
		// TODO Auto-generated method stub
		
		//Cell temp = new Cell(m.getX()-30, m.getY()-30);
		
		//cells2.add(temp); 

		
		
	}


	@Override
	public void mouseMoved(MouseEvent m) {
		// TODO Auto-generated method stub
		
	//Cell temp = new Cell(m.getX()-30, m.getY()-30); 
		
		//add it to ArrayList
	//	cells2.add(temp); 
		
		
		int pX = player.getxPos();
		int pY = player.getyPos(); 
		
		if(m.getX() < player.getxPos()) {
			player.setvX(-2);
		}
		
		else{
			player.setvX(2);
		}
		
		if(m.getY() < player.getyPos()) {
			player.setvY(-2);
		}
		else{
			player.setvY(2);
		}
		
	}
}
