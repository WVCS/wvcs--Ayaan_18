import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class Recursion extends JPanel implements ActionListener{
	
	/* this method should recursive draw concentric rings */
	public void concentricCircles(Graphics g, int width, int x, int y) {
		 
		//each method vall will draw a circle
		g.setColor(Color.blue);
		g.drawOval(x, y, width, width);
		
		//then the method should call anther method to draw
		//a different circle
		
		if(width >= 10) {
			concentricCircles(g, width-10, x+5, y+5); 
		}
		
	}	
	
	public void squares(Graphics g, int x, int y, int width) {
		//add the additional parameters (arguments) so that you can call
		//on the method recursively
		
		int r = (int) (Math.random()*256); 
		int gr = (int) (Math.random()*256); 
		int b = (int) (Math.random()*256); 
		
		Color temp = new Color(r, gr, b); 
		g.setColor(temp);
		g.fillRect(x, y, width, width);
		
		
		if(width > 5){
		squares(g, x-75, y-75, width/4); 
		squares(g, x+75, y-75, width/4);
		squares(g, x+225, y-75, width/4);
		squares(g, x+225, y+75, width/4);
		squares(g, x+225, y+225, width/4);
		squares(g, x+75, y+225, width/4);
		squares(g, x-75, y+225, width/4);
		squares(g, x-75, y+75, width/4);
		}

		
	}
	
	
	
	
	public void clover(Graphics g, int width, int x, int y, int lst) { //What additional variables will you need to draw the shape?
		g.setColor(Color.white);
		g.drawOval(x, y, width, width);
//		g.drawOval(700-x, 640-y, width, width);
//		g.drawOval(800-x, 600-y, width, width);
//		g.drawOval(x, y, width, width);
		
		if(width <= 300 && lst == 10) {
			clover(g, width+10, x-10, y-10, 10);
		}
		if(width <= 300 && lst == 20) {
			clover(g, width+10, x+10, y-10, 20);
		}
		if(width <= 300 && lst == 30) {
			clover(g, width+10, x-10, y-10, 30);
		}
		if(width <= 300 && lst == 40) {
			clover(g, width+10, x-10, y-10, 40);
		}
		
	}
	
//	public void snowflake(Graphics g, int x1, int y1, int x2, int y2) {
//		g.drawLine(x1, y1, x2, y2);
//	}


	public void paint(Graphics g) {
		g.setColor(Color.black);
		g.fillRect(0, 0, 2000, 2000);
		
		//call circles
		//concentricCircles(g, 100, 0, 0);
		//squares(g, 275, 225, 200);
		clover(g, 10, 360, 330, 10);

		clover(g, 10, 360, 330, 20);
		clover(g, 10, 360, 330, 30);
		clover(g, 10, 360, 330, 40);
	} //my code should go above this bracket unless I know about classes
	
	public static void main(String[] arg) {
		
		// line of code to create a MethodPractice object
		Recursion m = new Recursion();
	
	}// end of main method body 
	
	
	//constructor for the class
	//kind of looks like a method but no return type!!!
	public Recursion() {
		JFrame f = new JFrame("Recursive Methods");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 		f.setSize(800,600);
		f.add(this);
		f.setVisible(true);
		
	}
	Timer t = new Timer(16, this);
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		repaint();
	}

}//last curly - do not delete
